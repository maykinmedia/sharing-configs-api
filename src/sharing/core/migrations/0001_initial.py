# Generated by Django 3.2.12 on 2022-03-09 13:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Config",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="Name of the config to define which file storage backend to use",
                        max_length=100,
                        unique=True,
                        verbose_name="label",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("github", "Github"), ("debug", "Testing")],
                        default="github",
                        help_text="Type of the config",
                        max_length=50,
                        verbose_name="type",
                    ),
                ),
                (
                    "access_token",
                    models.CharField(
                        blank=True,
                        help_text="Access token for GitHub authorization. Can be generated at https://github.com/settings/tokens",
                        max_length=250,
                        verbose_name="access token",
                    ),
                ),
                (
                    "repo",
                    models.CharField(
                        blank=True,
                        help_text="GitHub repository in the format {owner}/{name}",
                        max_length=250,
                        verbose_name="repo",
                    ),
                ),
                (
                    "branch",
                    models.CharField(
                        blank=True,
                        help_text="GitHub branch to use, if empty the default branch is used",
                        max_length=250,
                        verbose_name="branch",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration",
                "verbose_name_plural": "Configurations",
            },
        ),
        migrations.CreateModel(
            name="ClientAuth",
            fields=[
                (
                    "token",
                    models.CharField(
                        max_length=40,
                        primary_key=True,
                        serialize=False,
                        verbose_name="token",
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        help_text="Organization which has access to the API",
                        max_length=200,
                        verbose_name="organization",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email to contact the organization",
                        max_length=254,
                        verbose_name="email",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date when the token was created",
                        verbose_name="created on",
                    ),
                ),
                (
                    "updated_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date when the token was last changed",
                        verbose_name="updated on",
                    ),
                ),
                (
                    "configs",
                    models.ManyToManyField(
                        blank=True, related_name="client_auths", to="core.Config"
                    ),
                ),
            ],
            options={
                "verbose_name": "Client authorization",
                "verbose_name_plural": "Client authorizations",
            },
        ),
    ]
