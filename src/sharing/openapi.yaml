openapi: 3.0.3
info:
  title: Sharing Configurations API
  version: 0.1.0
  description: An API to share configuration files using different backends
paths:
  /api/v1/config/{label}/folder/:
    get:
      operationId: folder_list
      description: List all folders with their subfolders
      summary: List folders
      parameters:
      - in: path
        name: label
        schema:
          type: string
        description: Name of the configuration. Used to define the parameters for
          file storage backend
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: permission
        schema:
          type: string
          enum:
          - read
          - write
        description: Permission mode for the folder
      tags:
      - files
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRootFolderList'
          description: ''
  /api/v1/config/{label}/folder/{folder}/files/:
    get:
      operationId: file_list
      description: List all files in the folder
      summary: List files
      parameters:
      - in: path
        name: folder
        schema:
          type: string
        description: Path to the folder where the configuration file is located
        required: true
      - in: path
        name: label
        schema:
          type: string
        description: Name of the configuration Used to define the parameters for file
          storage backend
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - files
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFileList'
          description: ''
    post:
      operationId: file_upload
      description: Upload configuration file
      summary: File upload
      parameters:
      - in: path
        name: folder
        schema:
          type: string
        description: Path to the folder where the configuration file is located
        required: true
      - in: path
        name: label
        schema:
          type: string
        description: Name of the configuration Used to define the parameters for file
          storage backend
        required: true
      tags:
      - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
  /api/v1/config/{label}/folder/{folder}/files/{filename}:
    get:
      operationId: file_download
      description: Download configuration file
      summary: File download
      parameters:
      - in: path
        name: filename
        schema:
          type: string
        description: Name of the configuration file
        required: true
      - in: path
        name: folder
        schema:
          type: string
        description: Path to the folder where the configuration file is located
        required: true
      - in: path
        name: label
        schema:
          type: string
        description: Name of the configuration. Used to define the parameters for
          file storage backend
        required: true
      tags:
      - files
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          description: ''
  /api/v1/configs/:
    get:
      operationId: config_list
      description: List all available configs
      summary: List configs
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - configs
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConfigList'
          description: ''
components:
  schemas:
    Config:
      type: object
      properties:
        label:
          type: string
          description: Name of the config to define which file storage backend to
            use
          maxLength: 100
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          description: Type of the config
      required:
      - label
    File:
      type: object
      properties:
        download_url:
          type: string
          format: uri
          readOnly: true
          description: Url to download the content of the file in the Sharing Configs
            API
        filename:
          type: string
          description: Name of the file
          maxLength: 100
        content:
          type: string
          writeOnly: true
          description: File content with base64 encoding
        author:
          type: string
          writeOnly: true
          description: Person who uploads the file
        overwrite:
          type: boolean
          writeOnly: true
          default: false
          description: Boolean if the uploaded file should overwrite the existing
            file in the folder
      required:
      - content
      - filename
    Folder:
      type: object
      properties:
        name:
          type: string
          title: naam
          description: Folder name
        children:
          type: array
          items: {}
          readOnly: true
          description: Subfolders of the folder
      required:
      - name
    PaginatedConfigList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Config'
    PaginatedFileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/File'
    PaginatedRootFolderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RootFolder'
    PermissionEnum:
      enum:
      - read
      - write
      type: string
    RootFolder:
      type: object
      properties:
        name:
          type: string
          title: naam
          description: Folder name
        children:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
          readOnly: true
          description: Subfolders of the folder
        permission:
          allOf:
          - $ref: '#/components/schemas/PermissionEnum'
          title: recht
          description: Permission mode for the folder
      required:
      - name
      - permission
    TypeEnum:
      enum:
      - github
      - debug
      type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
